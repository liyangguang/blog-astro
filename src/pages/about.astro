---
import BaseLayout from '@src/BaseLayout.astro';

const CONTACT = [
	{label: '812-360-1622', url: 'tel:+18123601622'},
	{label: 'liyangguangcn@gmail.com', url: 'mailto:liyangguangcn@gmail.com'},
	{label: 'yangguang.li', url: 'https://yangguang.li'},
	{label: 'linkedin.com/in/yangguangli/', url: 'https://linkedin.com/in/yangguangli/'},
];

const EXPERIENCES = [
	{
		company: 'Google',
		position: 'Staff Software Engineer',
		time: 'Dec 2024 - Present',
		location: 'Sunnyvale, CA',
		details: [
			`Frontend Tech Lead for Gemini playground - Google AI Studio (https://ai.google.dev/aistudio)`
		],
		tech: ['Angular', 'Gemini API'],
	},
	{
		company: 'Airbnb',
		position: 'Senior Frontend Engineer',
		time: 'June 2024 - Dec 2024',
		location: 'Remote',
		details: [
			`Key contributor to the new payment platform design launched in Nov 2024.`,
			`Spearheaded a frontend architecture overhaul, utilizing variation patterns to enhance scalability and reduce tech debt.`,
		],
		tech: ['React', 'GraphQL', 'Happo'],
	},
	{
		company: 'Sutter Hill Ventures',
		position: 'Lead Engineer',
		time: 'Jan 2023 - June 2024',
		location: 'Palo Alto, CA',
		details: [
			`Solo engineer at the LLM startup incubator, built multiple products from 0 to 1.`,
			`Built a full RAG-LLM application <a href="https://ask.lukew.com" target="_blank" rel="noopener noreferrer">Ask LukeW</a> - the full stack web app, content ingestion pipeline for the text/audio/videos/web/emails/PDFs, and the RAG flow with conversation memory/citation/context-aware suggestions.`,
			`Led engineering for a stealth enterprise AI product capable of processing large volumes of multimedia content into structured data using an LLM pipeline, enabling complex content querying, including AI agent implementation.`,
			`Developed the initial VSCode extension for AI coding assistant - <a href="https://augmentcode.com" target="_blank" rel="noopener noreferrer">AugmentCode</a>.`,
		],
		tech: ['RAG LLM (OpenAI, Claude, Gemini, Llama)', 'AI agent', 'Vector embeddings', 'SvelteKit', 'Supabase', 'VS code extension', 'LangChain'],
	},
	{
		company: 'Google',
		position: 'UXE Tech Lead Manager',
		time: 'June 2016 - Jan 2023',
		location: 'Mountain View, CA',
		details: [
			`Co-designed, prototyped, and deployed multiple data insight tools used across Google, including by the Office of the CEO.`,
			`Tech lead for multiple cross-company products, including a company OKR tracker, roadmap planning tool, and tech stack platform.`,
			`Built and managed a team of 4 UXEs (2020 - 2023)`,
		],
		tech: ['Vue', 'Angular', 'Firebase', 'GCP', 'd3.js'],
	},
	// {
	// 	company: 'YDays',
	// 	position: 'Founding Engineer',
	// 	time: 'Aug 2020 - Jan 2022',
	// 	location: 'Side project',
	// 	details: [
	// 		`Founding member and engineering lead of YDays.com - a creative drawing platform`,
	// 		`Architected the overall system of the YDays UI and admin dashboard.`,
	// 		`Implemented a P5-to-GIF conversion process on cloud functions, using a headless browser and web workers.`,
	// 	],
	// 	tech: ['React', 'Firebase', 'GitLab CI/CD', 'Cloud functions', 'Puppeteer'],
	// },
];

const EDUCATION = [
	{
		university: 'Indiana University',
		program: 'M.S. in Human-Computer Interaction Design',
		time: 'Aug 2014 - May 2016',
		location: 'Bloomington, IN, USA',
	},
	{
		university: 'Beijing University of Posts and Telecommunications',
		program: 'B.E. in Industrial Design - Interaction design track',
		time: 'Aug 2010 - Jun 2014',
		location: 'Beijing, China',
	},
];
---

<BaseLayout>
	<style>
		main {
			display: grid;
			grid-template-columns: 200px 1fr;
			gap: 1em 2em;
			align-items: start;
			max-width: 80ch;
			margin: 0 auto;
		}

		.section-title,
		.position,
		.metadata {
			margin: 0.3em 0;
		}

		.section-title {
			font-weight: bold;
		}

		.position {
			font-weight: bold;
		}

		.metadata {
			opacity: 0.7;
			font-size: .9em;
		}

		ul {
			list-style: none;
			padding: 0;
			margin: 0;
		}

		.exp-details {
			list-style: disc;
			padding-left: 1em;
		}

		:global(.exp-details a) {
			color: inherit;
			font-weight: inherit;
		}

		.exp-tech {
			padding-left: 1em;
		}

		p {
			margin: .3em 0;
		}

		.header {
			grid-column: 1/-1;
			margin-bottom: 1em;
		}

		.first-name {
			font-weight: bold;
			margin-right: .2em;
		}

		.first-name,
		.last-name {
			font-size: 2.5em;
		}

		.contacts {
			display: flex;
			gap: 1em;
		}

		.contacts li {
			margin: .3em 0;
		}
		.contacts li a {
			color: inherit;
			text-decoration: none;
			font-weight: normal;
			transition: color var(--transition);
		}

		.contacts li a:hover {
			color: var(--accent);
		}

		.text-content > li {
			margin-bottom: 1em;
		}

		@media screen and (max-width: 750px) {
			main {
				grid-template-columns: 1fr;
			}

			.contacts {
				display: block;
			}

			.mobile-line-wrap {
				display: flex;
				gap: .3em;
			}

			.mobile-line-wrap > * {
				margin: 0;
			}

			.mobile-line-wrap > *:not(:last-child)::after {
				content: ',';
			}
		}

		@media print {
			:global(header, footer) {
				display: none !important;
			}

			main {
				line-height: 1.4;
				font-size: .9em;
				gap: .6em;
				/* When printing, custom fonts can cause the text in the PDF messed up (backwards, etc.) */
				font-family: sans-serif;
			}

			/* Remove the URL rendering */
			.contacts a::after {
				content: none !important;
			}
		}
	</style>

	<main>
		<div class="header">
			<p>
				<span class="first-name">Yangguang</span>
				<span class="last-name">Li</span>
			</p>
			<ul class="contacts">
				{CONTACT.map((item) => <li><a href={item.url} target="_blank" rel="noreferrer noopener">{item.label}</a></li>)}
			</ul>
		</div>
		{EXPERIENCES.map((exp) => 
			<div>
				<div class="mobile-line-wrap">
					<p class="position">{exp.position}</p>
					<p class="section-title">{exp.company}</p>
				</div>
				<div class="mobile-line-wrap">
					<p class="metadata">{exp.time}</p>
					<p class="metadata">{exp.location}</p>
				</div>
			</div>
			<div>
				<ul class="exp-details">
					{exp.details?.map((detail) => <li set:html={detail}></li>)}
				</ul>
				<p class="exp-tech">{exp.tech ? <b>Tech: </b><span>{exp.tech.join(', ')}</span> : ''}</p>
			</div>
		)}

		<span class="section-title">Education</span>
		<ul class="text-content">
			{EDUCATION.map((item) => 
				<li>
					<p>{item.program} | {item.university}</p>
					<p class="metadata">{item.time} | {item.location}</p>
				</li>
			)}
		</ul>
	</main>
</BaseLayout>
