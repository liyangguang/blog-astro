---
interface Work {
  title: string;
  type: 'Work project'|'Side project'|'Fun project'|'';
  time: string;
  link: string;
  shortDescription: string;
  longDescription: string;
  image: any;
}

// TODO: add content
const WORKS: Work[] = [
  {
    title: 'AskLukeW',
    type: 'Work project',
    time: 'Feb 2023 - May 2023',
    link: 'https://ask.lukew.com',
    shortDescription: `"Chat with any website" experiment built at Sutter Hill Ventures.`,
    longDescription: `I built the pipeline to ingest webpages + audios + videos + PDFs (with many embedding techniques we discovered), and prompting, citation on LLM, as well as all the UI.`,
    image: '/works-images/ask_lukew.png',
  },
  {
    title: 'YDays',
    type: 'Side project',
    time: 'Aug 2020 - Jan 2022',
    link: 'https://ydays.com',
    shortDescription: `Creative drawing challenge app. A side project / startup attempt with designer friends.`,
    longDescription: ``,
    image: '/works-images/ydays.png',
  },
  {
    title: 'AI functions',
    type: 'Fun project',
    time: 'Apr 2023',
    link: 'https://www.npmjs.com/package/ai-function-js',
    shortDescription: `Descirbe the feature, and let LLM to *run* the code (without generating the code!)`,
    longDescription: ``,
    image: '/works-images/ai_function.png',
  },
  {
    title: 'ChatGPT Code Previewer',
    type: 'Side project',
    time: 'Mar 2023',
    link: 'https://chatgpt-code-previewer.vercel.app/',
    shortDescription: `Easily preview code generated by ChatGPT, and edit in CodePen.`,
    longDescription: ``,
    image: '/works-images/chatgpt_code_previewer.png',
  },
  {
    title: 'GPT - TDD',
    type: 'Fun project',
    time: 'Apr 2023',
    link: 'https://github.com/liyangguang/gpt-tdd',
    shortDescription: 'Test-Driven-Development + GPT => Auto code generation.',
    longDescription: ``,
    image: '/works-images/gpt_tdd.png',
  },
  {
    title: 'Figma TOC+ plugin',
    type: 'Side project',
    time: 'Jan 2022',
    link: 'https://www.figma.com/community/plugin/1037946448690949150/ToC%2B',
    shortDescription: `A Figma plugin to generate pages as sections for easier file management.`,
    longDescription: ``,
    image: '/works-images/figma_toc.png',
  },
  {
    title: 'Chrome status',
    type: 'Work project',
    time: 'Aug 2019',
    link: 'https://chromestatus.com',
    shortDescription: `WebComponent rebuild of the Chrome status site.`,
    longDescription: ``,
    image: '/works-images/chromestatus.png',
  },
  {
    title: 'More',
    type: '',
    time: '-',
    link: 'mailto:liyangguangcn@gmail.com',
    shortDescription: `Many of my projects are non-public. Hit me up if you want to learn more!`,
    longDescription: `I've built many projects from 0 to 1: educational games, interactive story telling, a project tracking tool, a custom CMS, and many more.`,
    image: '/works-images/lock.png',
  },
];

---
<ul>
  {
    WORKS.map(async (work) => (
      <li>
        <a href={work.link} target="_blank" rel="noreferrer noopener" style={{backgroundImage: `linear-gradient(#fff, #fffa), url(${work.image})`}}>
          <div>
            <p class="title">{work.title}</p>
            <p class="time">{work.time}</p>
            <p>{work.shortDescription}</p>
          </div>
          <div class="detail-layer">
            <p>{work.longDescription}</p>
          </div>
        </a>
      </li>
    ))
  }
</ul>

<style>
  ul {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 1em;
    padding: 0;
    list-style: none;
  }

  li {
    display: contents;
  }

  li a {
    border: 1px solid var(--border);
    display: grid;
    text-decoration: none;
    color: inherit !important;
    font-weight: normal;
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
  }
  
  li a > div {
    grid-column: 1;
    grid-row: 1;
    padding: 1em;
  }

  p {
    margin: .3em 0;
  }

  .title {
    color: var(--accent);
    font-weight: bold;
  }

  .detail-layer {
    background: #0009;
    opacity: 0;
    transition: opacity var(--transition);
    color: white;
    z-index: 1;
  }

  li:hover .detail-layer {
    opacity: 1;
  }

  .time {
    font-size: .8em;
    opacity: .8;
  }
</style>
